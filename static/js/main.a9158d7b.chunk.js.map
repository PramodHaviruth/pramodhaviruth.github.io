{"version":3,"sources":["comp/Bugs/index.js","comp/Bugs/BugsPage.js","comp/components/ActionButtons.js","comp/components/BaseGridComp.js","comp/components/CardComp.js","utils/EN_i18n.js","utils/Common.js","comp/components/CardModalComp.js","images/BugTracker.png","comp/components/CardsListComp.js","comp/components/DatePickerComp.js","comp/components/FileUploadComp.js","utils/CompRenderByJson.js","comp/components/FormComp.js","comp/components/LoadingComp.js","comp/components/MenuBaseGridComp.js","comp/components/SelectComp.js","comp/components/SideDrawerComp.js","comp/components/TextAreaComp.js","comp/components/TextFieldComp.js","comp/Login/index.js","comp/Login/LoginPage.js","comp/Register/index.js","comp/Register/RegisterPage.js","comp/Users/index.js","comp/Users/UsersPage.js","comp/Projects/index.js","comp/Projects/ProjectsPage.js","comp/App/router.js","App.js","reportWebVitals.js","index.js"],"names":["BugsPage","ActionButtons","btn1Prop","action","console","log","title","btn2Prop","Fragment","Button","variant","color","onClick","undefined","BaseGridComp","children","Grid","container","item","xs","lg","Box","sx","display","width","alignItems","justifyContent","bgcolor","height","CardComp","style","btnProps","Card","padding","CardHeader","textAlign","CardContent","CardActions","Texts","PageTitles","history","screenRoutes","navigateScreen","routeStr","push","RegExTypes","ErrType","parseErrType","field","type","basicTextFieldValidations","text","valProps","errObj","isError","helperText","RegExp","test","CardModalComp","open","handleOnClose","selectedMenu","useState","formFields","setFormFields","fieldsError","setfieldsError","errorExists","setErrorExists","textFields","name","description","members","projectInfo","setProjectInfo","assignee","severity","project","estimated_date","attachmentPath","bugInfo","setBugInfo","useEffect","selectedFormFields","id","BugFormFieldsJson","ProjectFormFieldsJson","forEach","props","onChange","handleOnChange","length","newFormFields","map","errorField","event","target","value","prevState","handleProjectOnChange","handleBugOnChange","validateProjTextFields","errorsList","nameErrObj","membersErrObj","data","basicDropDownValidations","descErrObj","typeErrObj","assigneeErrObj","severityErrObj","projErrObj","validateBugTextFields","Modal","onClose","overflowY","Item","marginTop","CardsListComp","spacing","desc","proj","maxHeight","overflow","src","AppLogo","marginBottom","alt","margin","fontWeight","WebkitLineClamp","webkitBoxOrient","textOverflow","Link","cursor","handleProjNav","DatePickerComp","label","key","inputFormat","gridWidth","dateVal","setDateVal","LocalizationProvider","dateAdapter","AdapterDateFns","DesktopDatePicker","renderInput","params","TextField","error","dateObj","FileUploadComp","placeholder","fileName","setFileName","component","hidden","file","files","parseInputJson","FormComp","inputFields","prototype","PropTypes","array","LoadingComp","justifyItems","CircularProgress","MenuBaseGridComp","route","iconId","setSelectedMenu","anchorEl","setAnchorEl","isModalOpen","setIsModalOpen","handleClose","Boolean","renderIcon","iconType","handleOnNav","menuItem","AppBar","position","Toolbar","minHeight","textTransform","backgroundColor","handleOnCreate","IconButton","size","currentTarget","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","menuId","marginLeft","flexDirection","SelectComp","menuValues","isMultiple","required","selectedMembers","setSelectedMembers","selectedMember","setSelectedMember","hidePlaceholder","setHidePlaceholder","setMembersChips","member","includes","filteredMems","filter","mem","FormControl","InputLabel","htmlFor","Select","multiple","input","OutlinedInput","ListItemText","primary","flexWrap","gap","Chip","fontSize","SideDrawerComp","renderMenuIcon","Drawer","anchor","flexShrink","boxSizing","List","SideDrawerMenu","menuItems","menu","index","ListItemButton","handleNav","selected","ListItemIcon","TextAreaComp","minRows","maxRows","InputProps","paddingBottom","TextareaAutosize","string","autoFocus","bool","disabled","object","func","TextFieldComp","LoginPage","userName","setUserName","password","setPassword","useHistory","formFieldsJson","usernameErrObj","passwordErrObj","validateTextFields","RegisterPage","username","email","confirmPassword","userInfo","setUserInfo","emailErrObj","confirmPasswordErrObj","UsersPage","ProjectsPage","RouterComp","exact","path","Login","Register","Bugs","Users","Projects","lightTheme","createTheme","palette","blue","secondary","purple","red","warning","yellow","success","green","background","default","paper","App","ThemeProvider","theme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9158d7b.chunk.js","sourcesContent":["import BugsPage from \"./BugsPage\";\r\n\r\nexport default BugsPage","import React from \"react\";\r\n\r\nconst BugsPage = () => {\r\n    return (\r\n        <h1>\r\n            Bugs Page\r\n        </h1>\r\n    )\r\n}\r\n\r\nexport default BugsPage","import React from 'react'\r\nimport { Button } from '@mui/material'\r\n\r\n//TODO - add the default props fields to all the comps\r\nconst ActionButtons = ({ btn1Prop = { action: () => { console.log('xcvxcvs') }, title: 'btn1' }, btn2Prop }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Button\r\n                variant='contained'\r\n                color='primary'\r\n                onClick={btn1Prop.action}\r\n            >\r\n                {btn1Prop.title}\r\n            </Button>\r\n            {\r\n                btn2Prop != undefined ?\r\n                    <Button\r\n                        variant='contained'\r\n                        color='primary'\r\n                        onClick={btn2Prop.action}\r\n                    >\r\n                        {btn2Prop.title}\r\n                    </Button>\r\n                    : <React.Fragment />\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ActionButtons","import React from 'react'\r\nimport { Box, Grid } from '@mui/material'\r\n\r\n//TODO fix the children at certain margin and add the items into box to scroll down not from center\r\nconst BaseGridComp = ({ children }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container >\r\n                <Grid item xs={12} lg={12} >\r\n                    <Box\r\n                        sx={{\r\n                            display: 'flex',\r\n                            width: '100%',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            bgcolor: 'background.default',\r\n                            color: 'text.primary',\r\n                            height: '100vh'\r\n                        }}\r\n                    >\r\n                        {children}\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default BaseGridComp","import React from 'react'\r\nimport { Card, CardContent, CardHeader, CardActions } from '@mui/material'\r\nimport ActionButtons from './ActionButtons'\r\n\r\nconst CardComp = ({ children, style, title, btnProps }) => {\r\n    return (\r\n        <Card\r\n            variant='elevation'\r\n            sx={{\r\n                width: '100%',\r\n                bgcolor: 'background.paper',\r\n                padding: '5px 10px'\r\n            }}\r\n        >\r\n            <CardHeader\r\n                sx={{\r\n                    textAlign: 'center',\r\n                }}\r\n                title={title}\r\n            />\r\n            <hr />\r\n            <CardContent\r\n                sx={{\r\n                    padding: '10px',\r\n                    textOverflow: 'ellipsis'\r\n                },\r\n                    style}\r\n            >\r\n                {children}\r\n            </CardContent>\r\n            <hr />\r\n            <CardActions\r\n                sx={{\r\n                    justifyContent: 'flex-end'\r\n                }}\r\n            >\r\n                {\r\n                    <ActionButtons\r\n                        {...btnProps}\r\n                    />\r\n                }\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default CardComp","export const Texts = {\r\n    Login: 'Login',\r\n    Register: 'Register',\r\n    ViewDetails: 'View Details',\r\n    Create: \"Create\",\r\n    Add: \"Add\",\r\n    Cancel: \"Cancel\"\r\n}\r\n\r\nexport const PageTitles = {\r\n    LoginPage: \"Login Page\",\r\n    RegisterPage: \"Registration Page\"\r\n}\r\n\r\nexport const AppTitle = \"Bug Tracker\"","import { useHistory } from 'react-router-dom';\r\n\r\nlet history = undefined\r\n\r\nexport const screenRoutes = {\r\n    landing: '/',\r\n    login: '/login',\r\n    register: '/register',\r\n    bugs: '/bugs',\r\n    users: '/users',\r\n    projects: '/projects'\r\n}\r\n\r\nexport const initUseHistory = () => {\r\n    history = useHistory()\r\n}\r\n\r\nexport const navigateScreen = (routeStr) => {\r\n    history.push(routeStr)\r\n}\r\n\r\nexport const RegExTypes = {\r\n    email: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n}\r\n\r\nconst ErrType = {\r\n    success: 0,\r\n    emptyText: 101,\r\n    invalidInput: 102,\r\n    noneSelected: 103\r\n}\r\n\r\nconst parseErrType = (field, type) => {\r\n    switch (type) {\r\n        case ErrType.emptyText:\r\n            return field + ' cannot be empty'\r\n        case ErrType.noneSelected:\r\n            return 'Please select a value'\r\n        case ErrType.invalidInput:\r\n            return 'Please enter a valid ' + field\r\n        default:\r\n            return 'Please enter a valid input value'\r\n    }\r\n}\r\n\r\nexport const basicTextFieldValidations = (field, text, valProps) => {\r\n    let errObj = {\r\n        field: field,\r\n        isError: false,\r\n        helperText: ''\r\n    }\r\n\r\n    if (text == null || text == undefined || text == '' || text == ' ') {\r\n        errObj = {\r\n            field: field,\r\n            isError: true,\r\n            helperText: parseErrType(field, ErrType.emptyText)\r\n        }\r\n    } else if (valProps != null) {\r\n        const patt = new RegExp(valProps)\r\n        let result = patt.test(text)\r\n\r\n        if (!result) {\r\n            errObj = {\r\n                field: field,\r\n                isError: true,\r\n                helperText: parseErrType(field, ErrType.invalidInput)\r\n            }\r\n        }\r\n    }\r\n\r\n    return errObj\r\n}\r\n\r\nexport const basicDropDownValidations = (field, data, valProps) => {\r\n    let errObj = {\r\n        field: field,\r\n        isError: false,\r\n        helperText: ''\r\n    }\r\n    console.log(\"Data in the dropdowns111\", data)\r\n\r\n    if (data == null || data == undefined) {\r\n        errObj = {\r\n            field: field,\r\n            isError: true,\r\n            helperText: parseErrType(field, ErrType.noneSelected)\r\n        }\r\n\r\n    } else if (data.length <= 0) {\r\n        errObj = {\r\n            field: field,\r\n            isError: true,\r\n            helperText: parseErrType(field, ErrType.noneSelected)\r\n        }\r\n    } else if (valProps) {\r\n        //TODO add validations for the drop downs\r\n    }\r\n    console.log(\"errObj\", errObj)\r\n\r\n    return errObj\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Modal, Grid } from '@mui/material'\r\n\r\nimport { Card, Form, Loading } from '../components'\r\nimport { Texts } from '../../utils/EN_i18n'\r\nimport ProjectFormFieldsJson from '../../asset/CreateProjectForm.json'\r\nimport BugFormFieldsJson from '../../asset/CreateBugForm.json'\r\nimport { basicTextFieldValidations, basicDropDownValidations } from '../../utils/Common'\r\n\r\nconst CardModalComp = ({ open, handleOnClose, selectedMenu }) => {\r\n    const [formFields, setFormFields] = useState([])\r\n    const [fieldsError, setfieldsError] = useState([])\r\n    const [errorExists, setErrorExists] = useState(true)\r\n    const textFields = {\r\n        name: 'name',\r\n        description: 'description',\r\n        members: 'members',\r\n        type: 'type',\r\n        assignee: 'assignee',\r\n        severity: 'severity',\r\n        project: 'project',\r\n        estimated_date: 'estimated_date',\r\n        attachmentPath: 'attachmentPath'\r\n    }\r\n    const [projectInfo, setProjectInfo] = useState({\r\n        name: '',\r\n        description: '',\r\n        members: [],\r\n    })\r\n    const [bugInfo, setBugInfo] = useState({\r\n        name: '',\r\n        description: '',\r\n        type: '',\r\n        assignee: '',\r\n        severity: '',\r\n        project: '',\r\n        estimated_date: '',\r\n        attachmentPath: ''\r\n    })\r\n    useEffect(() => {\r\n        // TODO check what is the selected menu and then set the form fields of that \r\n        let selectedFormFields = []\r\n        switch (selectedMenu.id) {\r\n            case 1:\r\n                selectedFormFields = ProjectFormFieldsJson\r\n                break;\r\n            case 3:\r\n                selectedFormFields = BugFormFieldsJson\r\n                break;\r\n            default:\r\n                selectedFormFields = ProjectFormFieldsJson\r\n                break;\r\n        }\r\n        selectedFormFields.formFields.forEach(field => {\r\n            field.props.onChange = handleOnChange\r\n        })\r\n        setFormFields(selectedFormFields.formFields);\r\n    })\r\n\r\n    useEffect(() => {\r\n        console.log('fieldsError', fieldsError)\r\n\r\n        if (fieldsError.length > 0) {\r\n            if (formFields.length > 0) {\r\n                let newFormFields = formFields.map(field => {\r\n                    console.log('fieldsError', fieldsError)\r\n\r\n                    fieldsError.forEach(errorField => {\r\n                        console.log('fieldsError', errorField)\r\n                        console.log('field.props.id', field.props.id)\r\n\r\n                        if (field.props.id === errorField.field) {\r\n                            field.props.isError = errorField.isError\r\n                            field.props.helperText = errorField.helperText ?\r\n                                errorField.helperText :\r\n                                field.props.helperText\r\n                        }\r\n                        errorField.isError ? setErrorExists(true) : setErrorExists(false)\r\n                    })\r\n                    return field\r\n                })\r\n                console.log('newFormFields', newFormFields)\r\n                console.log('fieldsErro1111r', fieldsError)\r\n\r\n                setFormFields(newFormFields)\r\n            }\r\n        }\r\n        console.log('fieldsErro2221111r', fieldsError)\r\n    }, [fieldsError])\r\n\r\n    useEffect(() => {\r\n        errorExists === false ? handleOnClose() : null\r\n        errorExists === false ? setProjectInfo({}) : null\r\n        errorExists === false ? setBugInfo({}) : null\r\n    }, [errorExists])\r\n\r\n    const handleProjectOnChange = (field, value) => {\r\n        console.log('Inside the projhect on change', field, value)\r\n        switch (field) {\r\n            case textFields.name:\r\n                setProjectInfo(prevState => ({\r\n                    ...prevState,\r\n                    name: value\r\n                }))\r\n                break;\r\n            case textFields.description:\r\n                setProjectInfo(prevState => ({\r\n                    ...prevState,\r\n                    description: value\r\n                }))\r\n                break;\r\n            case textFields.members:\r\n                setProjectInfo(prevState => ({\r\n                    ...prevState,\r\n                    members: value\r\n                }))\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleBugOnChange = (field, value) => {\r\n        console.log('Inside the bugs on change', field, value)\r\n        switch (field) {\r\n            case textFields.name:\r\n                setBugInfo(prevState => ({\r\n                    ...prevState,\r\n                    name: value\r\n                }))\r\n                break;\r\n            case textFields.description:\r\n                setBugInfo(prevState => ({\r\n                    ...prevState,\r\n                    description: value\r\n                }))\r\n                break;\r\n            case textFields.type:\r\n                // TODO - get the value string and get the id from enum and send it to backend\r\n                console.log('type-', value)\r\n                setBugInfo(prevState => ({\r\n                    ...prevState,\r\n                    type: value\r\n                }))\r\n                break;\r\n            case textFields.assignee:\r\n                // TODO - get the value string and get the id from enum and send it to backend\r\n                console.log('assigneee-', value)\r\n                setBugInfo(prevState => ({\r\n                    ...prevState,\r\n                    assignee: value\r\n                }))\r\n                break;\r\n            case textFields.severity:\r\n                // TODO - get the value string and get the id from enum and send it to backend\r\n                console.log('severity-', value)\r\n                setBugInfo(prevState => ({\r\n                    ...prevState,\r\n                    severity: value\r\n                }))\r\n                break;\r\n            case textFields.project:\r\n                // TODO - get the value string and get the id from enum and send it to backend\r\n                console.log('project-', value)\r\n                setBugInfo(prevState => ({\r\n                    ...prevState,\r\n                    project: value\r\n                }))\r\n                break;\r\n            case textFields.estimated_date:\r\n                console.log('estimated_date-', value)\r\n                setBugInfo(prevState => ({\r\n                    ...prevState,\r\n                    estimated_date: value\r\n                }))\r\n                break;\r\n            case textFields.attachmentPath:\r\n                setBugInfo(prevState => ({\r\n                    ...prevState,\r\n                    attachmentPath: value\r\n                }))\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        console.log('OOOOOOOOOOOOOOOOOO', event)\r\n        let field = event.target.id\r\n        let value = event.target.value\r\n        let selectedMenuId = selectedMenu.id\r\n\r\n        switch (selectedMenuId) {\r\n            case 1:\r\n                handleProjectOnChange(field, value)\r\n                break;\r\n            case 3:\r\n                handleBugOnChange(field, value)\r\n                break;\r\n        }\r\n    }\r\n\r\n    const validateBugTextFields = () => {\r\n        let errorsList = []\r\n        let nameErrObj = basicTextFieldValidations(textFields.name, bugInfo.name, null) //TODO validation props need to be an obj, where we can add multiple checks\r\n        errorsList.push(nameErrObj)\r\n        let descErrObj = basicTextFieldValidations(textFields.description, bugInfo.description, null)\r\n        errorsList.push(descErrObj)\r\n        let typeErrObj = basicTextFieldValidations(textFields.type, bugInfo.type, null)\r\n        errorsList.push(typeErrObj)\r\n        let assigneeErrObj = basicTextFieldValidations(textFields.assignee, bugInfo.assignee, null)\r\n        errorsList.push(assigneeErrObj)\r\n        let severityErrObj = basicTextFieldValidations(textFields.severity, bugInfo.severity, null)\r\n        errorsList.push(severityErrObj)\r\n        let projErrObj = basicTextFieldValidations(textFields.project, bugInfo.project, null)\r\n        errorsList.push(projErrObj)\r\n        console.log('bugs', errorsList)\r\n\r\n        setfieldsError(errorsList)\r\n    }\r\n\r\n    const validateProjTextFields = () => {\r\n        let errorsList = []\r\n        let nameErrObj = basicTextFieldValidations(textFields.name, projectInfo.name, null) //TODO validation props need to be an obj, where we can add multiple checks\r\n        errorsList.push(nameErrObj)\r\n        // let descErrObj = basicTextFieldValidations(textFields.description, projectInfo.description, null)\r\n        // errorsList.push(descErrObj)\r\n        let membersErrObj = basicDropDownValidations(textFields.members, projectInfo.members, null)\r\n        errorsList.push(membersErrObj)\r\n        console.log('Projectgs', errorsList)\r\n        setfieldsError(errorsList)\r\n    }\r\n\r\n    const createAction = () => {\r\n        console.log(\"Make api call to crete the \", selectedMenu.title, projectInfo, bugInfo)\r\n        switch (selectedMenu.id) {\r\n            case 1:\r\n                validateProjTextFields()\r\n                break;\r\n            case 3:\r\n                validateBugTextFields()\r\n                break;\r\n        }\r\n        // TODO make api call here if there are no errors and clear the proj and bug info data\r\n        // setProjectInfo({})\r\n        // setBugInfo({})\r\n        errorExists === false ? handleOnClose() : null\r\n        errorExists === false ? setProjectInfo({}) : null\r\n        errorExists === false ? setBugInfo({}) : null\r\n    }\r\n\r\n    const cancelAction = () => {\r\n        console.log(\"Make api call to crete the \", selectedMenu.title)\r\n        //TODO - Clear the project and bug info\r\n        handleOnClose()\r\n    }\r\n    const btnProps = {\r\n        btn1Prop: {\r\n            action: createAction,\r\n            title: Texts.Create\r\n        },\r\n        btn2Prop: {\r\n            action: cancelAction,\r\n            title: Texts.Cancel\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            open={open}\r\n            onClose={handleOnClose}\r\n            style={{ overflowY: 'scroll' }}\r\n        >\r\n            <Grid container Item lg={12} style={{ justifyContent: 'center' }}>\r\n                <Grid Item style={{ width: '40%', marginTop: '50px' }} >\r\n                    <Card\r\n                        title={`${Texts.Create} ${selectedMenu.title}`}\r\n                        style={{\r\n                            display: 'grid',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                        }}\r\n                        btnProps={btnProps}\r\n                    >\r\n                        {\r\n                            formFields.length > 0 ?\r\n                                <Form\r\n                                    formFields={formFields}\r\n                                /> :\r\n                                <Loading />\r\n                        }\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default CardModalComp","export default __webpack_public_path__ + \"static/media/BugTracker.0b528d8c.png\";","import React from 'react'\r\nimport { Grid, Card, CardContent, Link, CardActions } from '@mui/material'\r\n\r\nimport AppLogo from '../../images/BugTracker.png'\r\nimport { Texts } from '../../utils/EN_i18n'\r\n\r\nconst CardsListComp = () => {\r\n    const handleProjNav = (proj) => {\r\n        console.log('Project iddddd', proj.id)\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container item spacing={4} style={{ justifyContent: 'center' }}>\r\n                {\r\n                    [\r\n                        { id: 1, title: 'Proj1', desc: 'Proj desc Proj desc for the project one, this is the first prog, test needProj desc for the project one, this is the first prog, test needfor the project one, this is the first prog, test need to  be deltedtextOverflow: fsdjlksdjf lksdjfl sjdflsjdfls ' },\r\n                        { id: 2, title: 'Proj2', desc: 'Proj desc for the project one, this is the first prog' },\r\n                        { id: 3, title: 'Proj3', desc: 'Proj desc for the project one, this is the first prog' },\r\n                        { id: 4, title: 'Proj4', desc: 'Proj desc for the project one, this is the first prog' },\r\n                        { id: 5, title: 'Proj5', desc: 'Proj desc for the project one, this is the first prog' },\r\n                        { id: 6, title: 'Proj6', desc: 'Proj desc for the project one, this is the first prog' },\r\n                        { id: 7, title: 'Proj7', desc: 'Proj desc for the project one, this is the first prog' },\r\n                        { id: 8, title: 'Proj8', desc: 'Proj desc for the project one, this is the first prog' }\r\n                    ].map(proj => {\r\n                        return (\r\n                            <Grid item>\r\n                                <Card\r\n                                    variant='elevation'\r\n                                    sx={{\r\n                                        width: '275px',\r\n                                        height: '225px',\r\n                                        bgcolor: 'background.paper',\r\n                                        padding: '10px'\r\n                                    }}\r\n                                >\r\n                                    <CardContent\r\n                                        sx={{\r\n                                            padding: '5px',\r\n                                            textAlign: 'center',\r\n                                            maxHeight: '190px',\r\n                                            height: '190px',\r\n                                            overflow: 'hidden',\r\n                                        }}\r\n                                    >\r\n                                        <img\r\n                                            src={AppLogo}\r\n                                            style={{\r\n                                                width: \"100px\",\r\n                                                height: '100px',\r\n                                                marginBottom: \"20px\"\r\n                                            }}\r\n                                            alt=\"App Logo\"\r\n                                        />\r\n                                        <div style={{\r\n                                            textAlign: 'left'\r\n                                        }}>\r\n                                            <p style={{ margin: '0px 0px 5px 0px', fontWeight: 'bold' }}>{proj.title}</p>\r\n                                            <span style={{\r\n                                                display: '-webkit-box',\r\n                                                WebkitLineClamp: 2,\r\n                                                webkitBoxOrient: 'vertical',\r\n                                                overflow: 'hidden',\r\n                                                textOverflow: 'ellipsis'\r\n                                            }}>{proj.desc}</span>\r\n                                        </div>\r\n                                    </CardContent>\r\n                                    <CardActions\r\n                                        sx={{\r\n                                            justifyContent: 'flex-end'\r\n                                        }}\r\n                                    >\r\n                                        <Link sx={{ cursor: 'pointer' }} onClick={() => handleProjNav(proj)}>\r\n                                            {Texts.ViewDetails}\r\n                                        </Link>\r\n                                    </CardActions>\r\n                                </Card>\r\n                            </Grid>\r\n                        )\r\n                    })\r\n                }\r\n            </Grid>\r\n        </React.Fragment >\r\n    )\r\n}\r\n\r\nexport default CardsListComp","import React, { useState } from 'react'\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport { DesktopDatePicker, LocalizationProvider } from '@mui/lab'\r\nimport { TextField, Grid } from '@mui/material'\r\n\r\nconst DatePickerComp = ({\r\n    id,\r\n    key,\r\n    label,\r\n    value,\r\n    inputFormat,\r\n    isError,\r\n    helperText,\r\n    onChange,\r\n    gridWidth,\r\n    sx\r\n}) => {\r\n    let [dateVal, setDateVal] = useState(value)\r\n    return (\r\n        <React.Fragment>\r\n            <Grid item lg={gridWidth} >\r\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                    <DesktopDatePicker\r\n                        id={id}\r\n                        label={label}\r\n                        value={dateVal}\r\n                        inputFormat={inputFormat}\r\n                        renderInput={(params) => <TextField {...params} style={sx} error={isError}\r\n                            helperText={isError ? helperText : null} />}\r\n                        onChange={(event) => {\r\n                            console.log('LLLLLLLLLLL', event)\r\n                            let dateObj = {}\r\n                            dateObj.target = {}\r\n                            dateObj.target.id = 'estimated_date'\r\n                            dateObj.target.value = event\r\n                            setDateVal(event)\r\n                            onChange(dateObj)\r\n                        }\r\n                        }\r\n                    />\r\n                </LocalizationProvider>\r\n            </Grid>\r\n        </React.Fragment >\r\n    )\r\n}\r\n\r\nexport default DatePickerComp","import React, { useState } from 'react'\r\nimport { Button, Grid, TextField } from '@mui/material'\r\n\r\nconst FileUploadComp = ({\r\n    id,\r\n    isError,\r\n    helperText,\r\n    sx,\r\n    gridWidth,\r\n    placeholder,\r\n    onChange\r\n}) => {\r\n    let [fileName, setFileName] = useState('')\r\n    return (\r\n        <React.Fragment>\r\n            <Grid item lg={gridWidth} >\r\n                <Button\r\n                    id={id}\r\n                    variant=\"contained\"\r\n                    component=\"label\"\r\n                >\r\n                    {placeholder}\r\n                    <input\r\n                        type={\"file\"}\r\n                        hidden={true}\r\n                        onChange={(file) => {\r\n                            console.log('IIIIIII', file)\r\n                            setFileName(file.target.files[0].name)\r\n                            onChange(file)\r\n                        }}\r\n                    />\r\n                </Button>\r\n                <p style={sx}>\r\n                    {fileName}\r\n                </p>\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default FileUploadComp","import React from 'react'\r\nimport { TextField, TextArea, Select, DatePicker, FileUpload } from '../comp/components'\r\n\r\n\r\nexport const renderComponent = (inputFields) => {\r\n    let formFields = inputFields\r\n    return formFields.map(field => parseInputJson(field))\r\n}\r\n\r\nconst parseInputJson = (field) => {\r\n    switch (field.type) {\r\n        case 'textfield':\r\n            return <TextField {...field.props} />\r\n        case 'textarea':\r\n            return <TextArea {...field.props} />\r\n        case 'select':\r\n            return <Select {...field.props} />\r\n        case 'datepicker':\r\n            return <DatePicker {...field.props} />\r\n        case 'fileupload':\r\n            return <FileUpload {...field.props} />\r\n        default:\r\n            return <h4>defajult</h4>\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Grid } from '@mui/material'\r\nimport { renderComponent } from '../../utils/CompRenderByJson'\r\n\r\nconst FormComp = ({ formFields }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container justifyContent=\"center\">\r\n                {\r\n                    renderComponent(formFields)\r\n                }\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nFormComp.prototype = {\r\n    formFields: PropTypes.array\r\n}\r\n\r\nexport default FormComp","import React from 'react'\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nconst LoadingComp = ({ text = 'Loading...!' }) => {\r\n    return (\r\n        <div style={{ display: 'grid', justifyItems: 'center' }}>\r\n            <CircularProgress />\r\n            <p>{text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingComp","import React, { useState } from 'react'\r\nimport { Box, Grid, AppBar, Toolbar, Menu, MenuItem, IconButton, Button } from '@mui/material'\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\n\r\nimport { SideDrawer, CardModal } from '../components'\r\nimport { Texts } from '../../utils/EN_i18n'\r\n\r\n//TODO fix the children at certain margin and add the items into box to scroll down not from center\r\nconst MenuBaseGridComp = ({ children }) => {\r\n    const [selectedMenu, setSelectedMenu] = useState({\r\n        id: 1,\r\n        title: \"Projects\",\r\n        route: \"/projects\",\r\n        iconId: 1\r\n    })\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const MenuOptions = [\r\n        {\r\n            id: 1,\r\n            title: 'Profile',\r\n            iconId: 4\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Logout',\r\n            iconId: 5\r\n        }\r\n    ]\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const handleMenuAction = (menuId) => {\r\n        console.log('qwerttt', menuId)\r\n\r\n        handleClose()\r\n    }\r\n\r\n    const handleOnNav = (menuItem) => {\r\n        console.log('PPPPPPPPPP', menuItem)\r\n        setSelectedMenu(menuItem)\r\n    }\r\n\r\n    const handleOnCreate = (selectedMenu) => {\r\n        console.log('Creation ID', selectedMenu)\r\n        setIsModalOpen(true)\r\n    }\r\n\r\n    const handleOnModalClose = () => {\r\n        setIsModalOpen(false)\r\n    }\r\n\r\n    const renderIcon = (iconType) => {\r\n        switch (iconType) {\r\n            case 4:\r\n                return <PersonIcon />\r\n            case 5:\r\n                return <LogoutIcon />\r\n            default:\r\n                return <AccountCircle />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container >\r\n                <Grid container item lg={2}>\r\n                    <Grid item>\r\n                        <SideDrawer handleOnNav={handleOnNav} />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container item lg={10}>\r\n                    <Grid item style={{ width: '100%' }}>\r\n                        <AppBar position={\"sticky\"} >\r\n                            <Toolbar style={{\r\n                                minHeight: '50px',\r\n                                height: '50px',\r\n                                display: 'flex',\r\n                                justifyContent: 'space-between'\r\n                            }}>\r\n                                <span style={{ textTransform: 'uppercase' }}>{selectedMenu.title}</span>\r\n                                <div>\r\n                                    {/* TODO - add validations to allow only admin to enter the projects */}\r\n                                    {selectedMenu.id !== 2 ?\r\n                                        <Button style={{ backgroundColor: '#ffff', textTransform: 'capitalize' }} onClick={() => handleOnCreate(selectedMenu)}>\r\n                                            {`${Texts.Add} ${selectedMenu.title}`}\r\n                                        </Button> : <React.Fragment />\r\n                                    }\r\n                                    <IconButton\r\n                                        size=\"large\"\r\n                                        aria-label=\"account of current user\"\r\n                                        aria-controls=\"menu-appbar\"\r\n                                        aria-haspopup=\"true\"\r\n                                        onClick={handleMenu}\r\n                                        color=\"inherit\"\r\n                                    >\r\n                                        <AccountCircle />\r\n                                    </IconButton>\r\n                                    <Menu\r\n                                        id=\"menu-appbar\"\r\n                                        anchorEl={anchorEl}\r\n                                        anchorOrigin={{\r\n                                            vertical: 'bottom',\r\n                                            horizontal: 'left',\r\n                                        }}\r\n                                        keepMounted\r\n                                        transformOrigin={{\r\n                                            vertical: 'bottom',\r\n                                            horizontal: 'left',\r\n                                        }}\r\n                                        open={Boolean(anchorEl)}\r\n                                        onClose={handleClose}\r\n                                    >\r\n                                        {\r\n                                            MenuOptions.map(menuItem => {\r\n                                                return (\r\n                                                    <MenuItem key={menuItem.id} onClick={() => handleMenuAction(menuItem.id)}>\r\n                                                        {renderIcon(menuItem.iconId)}<span style={{ marginLeft: '5px' }}>{menuItem.title}</span>\r\n                                                    </MenuItem>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Menu>\r\n                                </div>\r\n                            </Toolbar>\r\n                        </AppBar>\r\n                        <Box\r\n                            sx={{\r\n                                display: 'flex',\r\n                                flexDirection: \"column\",\r\n                                padding: '25px',\r\n                                bgcolor: 'background.default',\r\n                                color: 'text.primary',\r\n                                overflow: 'hidden',\r\n                                overflowY: \"hidden\"\r\n                            }}\r\n                        >\r\n                            {children}\r\n                        </Box>\r\n                    </Grid>\r\n                    <CardModal\r\n                        open={isModalOpen}\r\n                        handleOnClose={handleOnModalClose}\r\n                        selectedMenu={selectedMenu}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default MenuBaseGridComp","import React, { useState, useEffect } from 'react'\r\nimport { Select, MenuItem, ListItemText, Grid, FormControl, InputLabel, OutlinedInput, Chip, Box } from '@mui/material'\r\n\r\nconst SelectComp = ({\r\n    id,\r\n    placeholder,\r\n    menuValues,\r\n    isMultiple,\r\n    variant,\r\n    onChange,\r\n    gridWidth,\r\n    required,\r\n    isError,\r\n    helperText,\r\n    sx\r\n}) => {\r\n    const [selectedMembers, setSelectedMembers] = useState([])\r\n    const [selectedMember, setSelectedMember] = useState('')\r\n    const [hidePlaceholder, setHidePlaceholder] = useState(true)\r\n    console.log('Quertit', menuValues, selectedMembers)\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { id: id, value: selectedMembers } })\r\n    }, [selectedMembers])\r\n\r\n    const handleOnSelect = (event) => {\r\n        const member = event.target.value\r\n\r\n        console.log(\"MMNNBBVV\", member)\r\n        setMembersChips(member)\r\n    }\r\n\r\n    const setMembersChips = (member) => {\r\n        if (selectedMembers.includes(member)) {\r\n            let filteredMems = selectedMembers.filter(mem => {\r\n                return member !== mem\r\n            })\r\n            console.log('fffffff', filteredMems, member)\r\n            setSelectedMember('')\r\n            setSelectedMembers(filteredMems)\r\n            setHidePlaceholder(true)\r\n        } else {\r\n            setSelectedMember(member)\r\n            setSelectedMembers([...selectedMembers, member])\r\n            setHidePlaceholder(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid item lg={gridWidth}>\r\n                <FormControl sx={sx}>\r\n                    {hidePlaceholder ?\r\n                        <InputLabel variant=\"outlined\" htmlFor=\"placeholder\">{placeholder}</InputLabel>\r\n                        : <React.Fragment />}\r\n                    <Select\r\n                        id={id}\r\n                        value={selectedMember}\r\n                        variant={variant}\r\n                        multiple={false}\r\n                        onChange={handleOnSelect}\r\n                        required={required}\r\n                        input={<OutlinedInput id=\"placeholder\" />}\r\n                    >\r\n                        {\r\n                            menuValues.length > 0 ?\r\n                                menuValues.map(name => {\r\n                                    return (<MenuItem key={name} value={name}>\r\n                                        <ListItemText primary={name} />\r\n                                    </MenuItem>)\r\n                                }) : <MenuItem key={'no_val'} value={'no_value'}><ListItemText primary={'No Value'} /></MenuItem>\r\n                        }\r\n                    </Select>\r\n                    {\r\n                        isMultiple ?\r\n                            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5, marginTop: '10px' }}>\r\n                                {selectedMembers.length > 0 &&\r\n                                    selectedMembers.map(value => {\r\n                                        return <Chip\r\n                                            key={value}\r\n                                            label={value}\r\n                                            style={{ cursor: 'pointer' }}\r\n                                            onClick={() => setMembersChips(value)}\r\n                                        />\r\n                                    })\r\n                                }\r\n                            </Box> : <React.Fragment />\r\n                    }\r\n                    {\r\n                        isError ?\r\n                            <span style={{ color: '#f44336', fontSize: '0.75rem', fontWeight: 400 }}>\r\n                                &nbsp;&nbsp;&nbsp;&nbsp;{helperText}\r\n                            </span> : <React.Fragment />\r\n                    }\r\n                </FormControl>\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default SelectComp","import React, { useState } from 'react'\r\nimport { Drawer, List, ListItemButton, ListItemIcon, ListItemText } from '@mui/material'\r\nimport ListAltIcon from '@mui/icons-material/ListAlt'\r\nimport PeopleAltIcon from '@mui/icons-material/PeopleAlt';\r\nimport WorkIcon from '@mui/icons-material/Work';\r\n\r\nimport SideDrawerMenu from '../../asset/SideDrawerMenu.json'\r\nimport AppLogo from '../../images/BugTracker.png'\r\n\r\nconst SideDrawerComp = ({ handleOnNav }) => {\r\n\r\n    const [selectedMenu, setSelectedMenu] = useState(1)\r\n\r\n    const handleNav = (menu) => {\r\n        console.log('ASDFGHJKL', menu)\r\n        setSelectedMenu(menu.id)\r\n        handleOnNav(menu)\r\n    }\r\n\r\n    const renderMenuIcon = (menuId) => {\r\n        switch (menuId) {\r\n            case 1:\r\n                return <WorkIcon />\r\n            case 2:\r\n                return <PeopleAltIcon />\r\n            case 3:\r\n                return <ListAltIcon />\r\n            default:\r\n                return <ListAltIcon />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Drawer\r\n            variant={\"permanent\"}\r\n            anchor={\"left\"}\r\n            sx={{\r\n                flexShrink: 0,\r\n                '& .MuiDrawer-paper': {\r\n                    width: '230px',\r\n                    boxSizing: 'border-box',\r\n                },\r\n            }}\r\n        >\r\n            <img\r\n                src={AppLogo}\r\n                style={{\r\n                    width: \"225px\",\r\n                    height: \"215px\",\r\n                    marginBottom: \"20px\"\r\n                }}\r\n                alt=\"App Logo\"\r\n            />\r\n            <List>\r\n                {\r\n                    SideDrawerMenu.menuItems.map((menu, index) => {\r\n                        return (\r\n                            <ListItemButton\r\n                                key={index}\r\n                                id={menu.title}\r\n                                onClick={() => { handleNav(menu) }}\r\n                                selected={selectedMenu === menu.id}\r\n                            >\r\n                                <ListItemIcon>{renderMenuIcon(menu.iconId)}</ListItemIcon>\r\n                                <ListItemText primary={menu.title} />\r\n                            </ListItemButton>\r\n                        )\r\n                    })\r\n                }\r\n\r\n            </List>\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nexport default SideDrawerComp","import React from 'react'\r\nimport { TextareaAutosize, Grid } from '@mui/material'\r\nconst TextAreaComp = ({\r\n    id,\r\n    minRows,\r\n    maxRows,\r\n    placeholder,\r\n    value,\r\n    sx,\r\n    required,\r\n    onChange,\r\n    variant,\r\n    isError,\r\n    helperText,\r\n    InputProps,\r\n    gridWidth\r\n}) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Grid item lg={gridWidth} style={{ paddingBottom: '20px' }}>\r\n                <TextareaAutosize\r\n                    id={id}\r\n                    minRows={minRows}\r\n                    maxRows={maxRows}\r\n                    placeholder={placeholder}\r\n                    style={sx}\r\n                    value={value}\r\n                    required={required}\r\n                    onChange={onChange}\r\n                    variant={variant}\r\n                // error={isError}\r\n                // helperText={isError ? helperText : null}\r\n                // InputProps={InputProps}\r\n                />\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TextAreaComp","import React, { useEffect } from 'react'\r\nimport { TextField, Grid } from '@mui/material';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst TextFieldComp = ({\r\n    id,\r\n    type,\r\n    autoFocus,\r\n    color,\r\n    value,\r\n    disabled,\r\n    variant,\r\n    isError,\r\n    helperText,\r\n    InputProps,\r\n    placeholder,\r\n    required,\r\n    sx,\r\n    gridWidth,\r\n    onChange\r\n}) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Grid item lg={gridWidth}>\r\n                <TextField\r\n                    id={id}\r\n                    type={type}\r\n                    autoFocus={autoFocus}\r\n                    color={color}\r\n                    value={value}\r\n                    disabled={disabled}\r\n                    variant={variant}\r\n                    error={isError}\r\n                    helperText={isError ? helperText : null}\r\n                    InputProps={InputProps}\r\n                    placeholder={placeholder}\r\n                    required={required}\r\n                    sx={sx}\r\n                    onChange={onChange}\r\n                />\r\n            </Grid>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nTextField.prototype = {\r\n    id: PropTypes.string,\r\n    type: PropTypes.string,\r\n    autoFocus: PropTypes.bool,\r\n    color: PropTypes.string,\r\n    value: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    variant: PropTypes.string,\r\n    helperText: PropTypes.string,\r\n    InputProps: PropTypes.object,\r\n    placeholder: PropTypes.string,\r\n    required: PropTypes.bool,\r\n    sx: PropTypes.object,\r\n    onChange: PropTypes.func,\r\n    isError: PropTypes.bool\r\n}\r\n\r\nexport default TextFieldComp","import LoginPage from \"./LoginPage\";\r\n\r\nexport default LoginPage","import React, { useEffect, useState } from 'react'\r\n// TODO need to make a single base comp to import instead of all these below imports\r\nimport { BaseGrid, Card, Form, Loading } from '../components'\r\nimport { Grid } from '@mui/material'\r\n\r\nimport formFieldsJson from '../../asset/LoginForm.json'\r\nimport { PageTitles, Texts } from '../../utils/EN_i18n'\r\n// TODO need to make a single base object to import instead of all these below methods\r\nimport { screenRoutes, initUseHistory, navigateScreen, basicTextFieldValidations } from '../../utils/Common'\r\n\r\nconst LoginPage = () => {\r\n    let [userName, setUserName] = useState('')\r\n    let [password, setPassword] = useState('')\r\n    let [fieldsError, setfieldsError] = useState([])\r\n    let [formFields, setFormFields] = useState([])\r\n    initUseHistory()\r\n\r\n    const textFields = {\r\n        username: 'username',\r\n        password: 'password'\r\n    }\r\n\r\n    // TODO - make this method contents reuseable\r\n    useEffect(() => {\r\n        formFieldsJson.formFields.forEach(field => {\r\n            field.props.onChange = handleOnChange\r\n        })\r\n        setFormFields(formFieldsJson.formFields);\r\n\r\n    }, [])\r\n\r\n    // TODO - make this method contents reuseable\r\n    useEffect(() => {\r\n        if (fieldsError.length > 0) {\r\n            if (formFields.length > 0) {\r\n                let newFormFields = formFields.map(field => {\r\n                    fieldsError.forEach(errorField => {\r\n                        if (field.props.id === errorField.field) {\r\n                            field.props.isError = errorField.isError\r\n                            field.props.helperText = errorField.helperText ?\r\n                                errorField.helperText :\r\n                                field.props.helperText\r\n                        }\r\n                    })\r\n                    return field\r\n                })\r\n                setFormFields(newFormFields)\r\n            }\r\n        }\r\n    }, [fieldsError])\r\n\r\n    const handleOnChange = (event) => {\r\n        let field = event.target.id\r\n        let value = event.target.value\r\n        // TODO convert the state to an object and then store and retrive from there\r\n        switch (field) {\r\n            case textFields.username:\r\n                setUserName(value)\r\n                break;\r\n            case textFields.password:\r\n                setPassword(value)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const validateTextFields = () => {\r\n        let errorsList = []\r\n        let usernameErrObj = basicTextFieldValidations(textFields.username, userName, null) //TODO validation props need to be an obj, where we can add multiple checks\r\n        errorsList.push(usernameErrObj)\r\n        let passwordErrObj = basicTextFieldValidations(textFields.password, password, null)\r\n        errorsList.push(passwordErrObj)\r\n\r\n        setfieldsError(errorsList)\r\n    }\r\n\r\n    const loginAction = () => {\r\n        validateTextFields()\r\n    }\r\n\r\n    const registerAction = () => {\r\n        navigateScreen(screenRoutes.register)\r\n    }\r\n\r\n    const btnProps = {\r\n        btn1Prop: {\r\n            action: loginAction,\r\n            title: Texts.Login\r\n        },\r\n        btn2Prop: {\r\n            action: registerAction,\r\n            title: Texts.Register\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <BaseGrid>\r\n                {/* // TODO need to clean up grid system for the base grid and the login and register grid */}\r\n                <Grid container Item lg={12} style={{ justifyContent: 'center' }}>\r\n                    <Grid Item style={{ width: '40%' }} >\r\n                        <Card\r\n                            title={PageTitles.LoginPage}\r\n                            style={{\r\n                                display: 'grid',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                            }}\r\n                            btnProps={btnProps}\r\n                        >\r\n                            {\r\n                                formFields.length > 0 ?\r\n                                    <Form\r\n                                        formFields={formFields}\r\n                                    /> :\r\n                                    <Loading />\r\n                            }\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </BaseGrid>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default LoginPage","import RegisterPage from \"./RegisterPage\";\r\n\r\nexport default RegisterPage","import React, { useEffect, useState } from 'react'\r\nimport { BaseGrid, Card, Form, Loading } from '../components'\r\nimport { Grid } from '@mui/material'\r\n\r\nimport formFieldsJson from '../../asset/RegistrationForm.json'\r\nimport { PageTitles, Texts } from '../../utils/EN_i18n'\r\nimport { navigateScreen, basicTextFieldValidations, RegExTypes, screenRoutes } from '../../utils/Common'\r\n\r\nconst RegisterPage = () => {\r\n    let [userInfo, setUserInfo] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    })\r\n    let [formFields, setFormFields] = useState([])\r\n    let [fieldsError, setfieldsError] = useState([])\r\n\r\n    let textFields = {\r\n        username: 'username',\r\n        email: 'email',\r\n        password: 'password',\r\n        confirmPassword: 'confirm_password',\r\n    }\r\n\r\n    useEffect(() => {\r\n        formFieldsJson.formFields.forEach(field => {\r\n            field.props.onChange = handleOnChange\r\n        })\r\n        setFormFields(formFieldsJson.formFields);\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (fieldsError.length > 0) {\r\n            if (formFields.length > 0) {\r\n                let newFormFields = formFields.map(field => {\r\n                    fieldsError.forEach(errorField => {\r\n                        if (field.props.id === errorField.field) {\r\n                            field.props.isError = errorField.isError\r\n                            field.props.helperText = errorField.helperText ?\r\n                                errorField.helperText :\r\n                                field.props.helperText\r\n                        }\r\n                    })\r\n                    return field\r\n                })\r\n                setFormFields(newFormFields)\r\n            }\r\n        }\r\n    }, [fieldsError])\r\n\r\n    const handleOnChange = (event) => {\r\n        let field = event.target.id\r\n        let value = event.target.value\r\n        // let userInfoObj = { ...userInfo }\r\n        // TODO convert the state to an object and then store and retrive from there\r\n        switch (field) {\r\n            case textFields.username:\r\n                // !IMP! - To update the values of the object in a state, \r\n                // use prevstate to get all other vals\r\n                setUserInfo((prevState) => ({\r\n                    ...prevState,\r\n                    username: value\r\n                }))\r\n                break;\r\n            case textFields.email:\r\n                setUserInfo((prevState) => ({\r\n                    ...prevState,\r\n                    email: value\r\n                }))\r\n                break;\r\n            case textFields.password:\r\n                setUserInfo((prevState) => ({\r\n                    ...prevState,\r\n                    password: value\r\n                }))\r\n                break;\r\n            case textFields.confirmPassword:\r\n                setUserInfo((prevState) => ({\r\n                    ...prevState,\r\n                    confirmPassword: value\r\n                }))\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const validateTextFields = () => {\r\n        let errorsList = []\r\n        let usernameErrObj = basicTextFieldValidations(textFields.username, userInfo.username, null) //TODO validation props need to be an obj, where we can add multiple checks\r\n        errorsList.push(usernameErrObj)\r\n        let emailErrObj = basicTextFieldValidations(textFields.email, userInfo.email, RegExTypes.email)\r\n        errorsList.push(emailErrObj)\r\n        let passwordErrObj = basicTextFieldValidations(textFields.password, userInfo.password, null)\r\n        errorsList.push(passwordErrObj)\r\n        let confirmPasswordErrObj = basicTextFieldValidations(textFields.confirmPassword, userInfo.confirmPassword, null)\r\n        errorsList.push(confirmPasswordErrObj)\r\n\r\n        setfieldsError(errorsList)\r\n    }\r\n\r\n    const registerAction = () => {\r\n        validateTextFields()\r\n        navigateScreen(screenRoutes.projects)\r\n    }\r\n\r\n    const btnProps = {\r\n        btn1Prop: {\r\n            action: registerAction,\r\n            title: Texts.Register\r\n        }\r\n    }\r\n\r\n    return (\r\n        < React.Fragment >\r\n            <BaseGrid >\r\n                <Grid container Item lg={12} style={{ justifyContent: 'center' }}>\r\n                    <Grid Item style={{ width: '40%' }} >\r\n                        <Card\r\n                            title={PageTitles.RegisterPage}\r\n                            style={{\r\n                                display: 'grid',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                            }}\r\n                            btnProps={btnProps}\r\n                        >\r\n                            {\r\n                                formFields.length > 0 ?\r\n                                    <Form\r\n                                        formFields={formFields}\r\n                                    /> :\r\n                                    <Loading />\r\n                            }\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </BaseGrid>\r\n        </React.Fragment >\r\n    )\r\n}\r\n\r\nexport default RegisterPage","import UsersPage from \"./UsersPage\";\r\n\r\nexport default UsersPage","import React from 'react'\r\n\r\nconst UsersPage = () => {\r\n    return (\r\n        <h1>\r\n            Users Page\r\n        </h1>\r\n    )\r\n}\r\n\r\nexport default UsersPage","import ProjectsPage from './ProjectsPage'\r\n\r\nexport default ProjectsPage","import React from 'react'\r\n\r\nimport { MenuBaseGrid, CardsList } from '../components'\r\n\r\nconst ProjectsPage = () => {\r\n    return (\r\n        < React.Fragment >\r\n            <MenuBaseGrid >\r\n                <CardsList />\r\n            </MenuBaseGrid>\r\n        </React.Fragment >\r\n    )\r\n}\r\n\r\nexport default ProjectsPage","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport BugsPage from '../Bugs'\r\nimport LoginPage from '../Login'\r\nimport RegisterPage from '../Register'\r\nimport UsersPage from '../Users'\r\nimport ProjectsPage from '../Projects'\r\n\r\nimport { screenRoutes } from '../../utils/Common'\r\n\r\nconst RouterComp = () => {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path={screenRoutes.landing}>\r\n                    <LoginPage />\r\n                </Route>\r\n\r\n                <Route exact path={screenRoutes.register}>\r\n                    <RegisterPage />\r\n                </Route>\r\n\r\n                <Route exact path={screenRoutes.bugs}>\r\n                    <BugsPage />\r\n                </Route>\r\n\r\n                <Route exact path={screenRoutes.users}>\r\n                    <UsersPage />\r\n                </Route>\r\n\r\n                <Route exact path={screenRoutes.projects}>\r\n                    <ProjectsPage />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default RouterComp","import { createTheme, ThemeProvider } from '@mui/material/styles'\r\nimport { blue, purple, red, yellow, green } from '@mui/material/colors'\r\nimport RouterComp from './comp/App/router';\r\n\r\nlet lightTheme = createTheme({\r\n  palette: {\r\n    primary: blue,\r\n    secondary: purple,\r\n    error: red,\r\n    warning: yellow,\r\n    success: green,\r\n    background: {\r\n      default: '#ECECEC',\r\n      paper: '#fff'\r\n    }\r\n  }\r\n})\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={lightTheme} >\r\n      <RouterComp />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}